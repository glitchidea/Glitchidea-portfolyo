name: Deploy to Azure Web App (Vite Static)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

env:
  AZURE_WEBAPP_NAME: ${{ vars.AZURE_WEBAPP_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build (Azure)
        run: |
          DEPLOY_TARGET=azure npm run build

      - name: Prepare deploy package
        run: |
          rm -rf deploy
          mkdir -p deploy
          cp -r dist/* deploy/
          cat > deploy/server.mjs << 'SERVE'
          import http from 'http';
          import handler from 'serve-handler';
          const port = process.env.PORT || 8080;
          const server = http.createServer((request, response) => {
            return handler(request, response, { public: '.' });
          });
          server.listen(port, () => {
            console.log(`Server is running on port ${port}`);
          });
          SERVE
          cat > deploy/package.json << 'PKG'
          {
            "name": "glitch-portfolio-azure",
            "private": true,
            "version": "1.0.0",
            "scripts": {
              "start": "node server.mjs"
            },
            "dependencies": {
              "serve-handler": "^6.1.5"
            }
          }
          PKG
          npm ci --prefix deploy --omit=dev

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: deploy
          path: deploy

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: Development
      url: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: deploy
          path: deploy

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: deploy


